{"version":3,"sources":["components/MovieRow.js","components/FeaturedMovie.js","components/Header.js","Tmdb.js","App.js","index.js"],"names":["MovieRow","title","items","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listW","results","length","marginLeft","width","map","item","key","src","poster_path","alt","original_title","FeaturedMovie","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","href","id","join","Header","black","API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","getMovieInfo","movieId","type","info","App","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","useEffect","Tmdb","list","originals","filter","randomChoseMovie","floor","random","chosen","chosenInfo","loadALL","scrollListener","scrollY","addEventListener","removeEventListener","role","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c4b79a0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./MovieRow.css\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\n\nfunction MovieRow({ title, items }) {\n  const [scrollX, setScrollX] = useState(0);\n\n  const handleLeftArrow = () => {\n    let x = scrollX + Math.round(window.innerWidth / 2);\n    if (x > 0) {\n      x = 0;\n    }\n    setScrollX(x)\n\n  };\n\n  const handleRightArrow = () => {\n    let x = scrollX - Math.round(window.innerWidth / 2);\n    let listW = items.results.length * 150;\n    if((window.innerWidth - listW ) > x) {\n      x = (window.innerWidth - listW) - 60;\n    }\n    \n    setScrollX(x)\n\n  };\n\n  return (\n    <div className=\"movieRow\">\n      <h2>{title}</h2>\n      <div className=\"movieRow--left\" onClick={handleLeftArrow}>\n        <NavigateBeforeIcon style={{ fontSize: 50 }} />\n      </div>\n      <div className=\"movieRow--right\" onClick={handleRightArrow}>\n        <NavigateNextIcon style={{ fontSize: 50 }} />\n      </div>\n\n      <div className=\"movieRow--listarea\" >\n        <div\n          className=\"movieRow--list\"\n          style={{\n            marginLeft: scrollX,\n            width: items.results.length * 150,\n          }}\n        >\n          {items.results.length > 0 &&\n            items.results.map((item, key) => (\n              <div key={key} className=\"movieRow--item\">\n                <img\n                  src={`https://image.tmdb.org/t/p/w300${item.poster_path}`}\n                  alt={item.original_title}\n                />\n              </div>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MovieRow;\n","import React from \"react\";\nimport \"./FeaturedMovie.css\";\n\nfunction FeaturedMovie({ item }) {\n  let firstDate = new Date(item.first_air_date);\n  let genres = [];\n  for (let i in item.genres) {\n    genres.push(item.genres[i].name);\n  }\n  let description = item.overview;\n  if (description.length > 400) {\n    description = description.substring(0, 400)+'...';\n  }\n\n  return (\n    <section\n      className=\"featured\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`,\n      }}\n    >\n      <div className=\"featured--vertical\">\n        <div className=\"featured--horizontal\">\n          <div className=\"featured--name\">{item.original_name}</div>\n          <div className=\"featured--info\">\n            <div className=\"featured--points\">{item.vote_average} pontos</div>\n            <div className=\"featured--year\">{firstDate.getFullYear()}</div>\n            <div className=\"featured--seasons\">\n              {item.number_of_seasons} temporada\n              {item.number_of_seasons !== 1 ? \"s\" : \"\"}\n            </div>\n\n            <div className=\"featured--description\">{description}</div>\n\n            <div className=\"featured--buttons\">\n              <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">\n                ▶ Assistir\n              </a>\n              <a\n                href={`/list/add${item.id}`}\n                className=\"featured--mylistbutton\"\n              >\n                + Minha Lista\n              </a>\n            </div>\n\n            <div className=\"featured--genres\">\n              <strong>Gêneros: </strong>\n              {genres.join(\", \")}\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default FeaturedMovie;\n","import React from \"react\";\n\nimport \"./Header.css\";\n\nfunction Header({black}) {\n  return (\n    <header className={black ? 'black' : ''}>\n      <div className=\"header--logo\">\n        <a href=\"/\">\n          <img\n            src=\"netflix.png\"\n            alt=\"netflix\"\n          />\n        </a>\n      </div>\n      <div className=\"header--user\">\n        <a href=\"/\">\n          <img\n            src=\"user.jpg\"\n            alt=\"Usuário\"\n          />\n        </a>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","const API_KEY = \"efb82a76211b8ef1a5e3019a7de40bbe\";\nconst API_BASE = \"https://api.themoviedb.org/3\";\n\nconst basicFetch = async (endpoint) => {\n  const req = await fetch(`${API_BASE}${endpoint}`);\n  const json = await req.json();\n\n  return json;\n};\n\nexport default {\n  getHomeList: async () => {\n    return [\n      {\n        slug: \"originals\",\n        title: \"Filmes e Séries Originais\",\n        items: await basicFetch(\n          `/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`\n        ),\n      },\n\n      {\n        slug: \"trending\",\n        title: \"Recomendamos pra Você\",\n        items: await basicFetch(\n          `/trending/all/week?language=pt-BR&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"toprated\",\n        title: \"Em Alta\",\n        items: await basicFetch(\n          `/movie/top_rated?language=pt-BR&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"action\",\n        title: \"Ação\",\n        items: await basicFetch(\n          `/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"comedy\",\n        title: \"Comédia\",\n        items: await basicFetch(\n          `/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"horror\",\n        title: \"Terror\",\n        items: await basicFetch(\n          `/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"romance\",\n        title: \"Romance\",\n        items: await basicFetch(\n          `/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"documentary\",\n        title: \"Documentário\",\n        items: await basicFetch(\n          `/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`\n        ),\n      },\n    ];\n  },\n\n  getMovieInfo: async (movieId, type) => {\n    let info = {};\n\n    if (movieId) {\n      switch (type) {\n        case \"movie\":\n          info = await basicFetch(\n            `/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`\n          );\n          break;\n        case \"tv\":\n          info = await basicFetch(\n            `/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`\n          );\n\n          break;\n        default:\n          info = null;\n          break;\n      }\n    }\n\n    return info;\n  },\n};\n","import React, { useEffect, useState } from \"react\";\nimport MovieRow from \"./components/MovieRow\";\nimport FeaturedMovie from \"./components/FeaturedMovie\";\nimport Header from \"./components/Header\";\nimport Tmdb from \"./Tmdb\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  useEffect(() => {\n    const loadALL = async () => {\n      // pegando a lista TOTAL\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      //pegando o filme em destaque\n      let originals = list.filter((i) => i.slug === \"originals\");\n      let randomChoseMovie = Math.floor(\n        Math.random() * (originals[0].items.results.length - 1)\n      );\n      let chosen = originals[0].items.results[randomChoseMovie];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, \"tv\");\n\n      setFeaturedData(chosenInfo);\n    };\n\n    loadALL();\n  }, []);\n\n  useEffect(() => {\n    const scrollListener = () => {\n      if (window.scrollY >= 10) {\n        setBlackHeader(true);\n      } else {\n        setBlackHeader(false);\n      }\n    };\n\n    window.addEventListener(\"scroll\", scrollListener);\n    return () => {\n      window.removeEventListener(\"scroll\", scrollListener);\n    };\n  }, []);\n\n  return (\n    <div className=\"Page\">\n      <Header black={blackHeader} />\n\n      {featuredData && <FeaturedMovie item={featuredData} />}\n\n      <section className=\"list\">\n        {movieList.map((item, key) => (\n          <MovieRow key={key} title={item.title} items={item.items} />\n        ))}\n      </section>\n\n      <footer>\n        Feito por <span role>🤠</span> Yan Cardoso\n      </footer>\n\n      {movieList.length <= 0 && (\n        <div className=\"loading\">\n          <img src=\"netflix_virus_loading.gif\" alt=\"Carregando\" />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}